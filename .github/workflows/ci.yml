name: Java CI with Ordered Projects

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["core", "server", "other"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test core project
        if: matrix.project == 'core'
        run: |
          if [ -d "core" ] && [ -f "core/pom.xml" ]; then
            echo ">>> Building core project"
            cd core
            mvn clean verify
            cd ..
          else
            echo "Core project not found"
            exit 1
          fi

      - name: Build and test server project
        if: matrix.project == 'server'
        run: |
          if [ -d "server" ] && [ -f "server/pom.xml" ]; then
            echo ">>> Building server project"
            cd server
            mvn clean verify
            cd ..
          else
            echo "Server project not found"
            exit 1
          fi

      - name: Build and test other projects
        if: matrix.project == 'other'
        run: |
          echo ">>> Building other projects"
          for dir in $(find . -mindepth 1 -maxdepth 1 -type d); do
            if [ -f "$dir/pom.xml" ] && [ "$dir" != "./core" ] && [ "$dir" != "./server" ]; then
              echo ">>> Building project in $dir"
              mvn -f "$dir/pom.xml" clean verify || echo ">>> Build failed in $dir"
            fi
          done

      - name: Collect test results
        if: always()
        run: |
          mkdir -p test-results/${{ matrix.project }}
          if [ -d "${{ matrix.project }}/target" ]; then
            cp -r ${{ matrix.project }}/target/surefire-reports test-results/${{ matrix.project }} || true
            cp -r ${{ matrix.project }}/target/site/jacoco test-results/${{ matrix.project }} || true
          else
            find . -path "./*/target" -exec cp -r --parents {} test-results/${{ matrix.project }} \; || true
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.project }}
          path: test-results/${{ matrix.project }}
          retention-days: 7