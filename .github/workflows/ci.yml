name: Java CI + Code Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  KAFKA_BOOTSTRAP_SERVERS: localhost:9092
  POSTGRES_URL: jdbc:postgresql://localhost:5432/spacebattle
  POSTGRES_USER: space
  POSTGRES_PASSWORD: battle

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: spacebattle
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
        ports:
          - 2181:2181

      kafka:
        image: confluentinc/cp-kafka:7.3.0
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
          - 9092:9092

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and install core
        run: |
          cd core
          mvn clean install

      - name: Build and install server
        run: |
          cd ../server
          mvn clean install

      - name: Build and test all other Maven projects
        run: |
          for d in ../*; do
            if [ -f "$d/pom.xml" ] && [[ "$d" != *"core"* && "$d" != *"server"* ]]; then
              echo "=== Building $d ==="
              (cd "$d" && mvn clean verify \
                -Dspring.datasource.url=${{ env.POSTGRES_URL }} \
                -Dspring.datasource.username=${{ env.POSTGRES_USER }} \
                -Dspring.datasource.password=${{ env.POSTGRES_PASSWORD }} \
                -DKAFKA_BOOTSTRAP_SERVERS=${{ env.KAFKA_BOOTSTRAP_SERVERS }} ) || exit 1
            fi
          done

      - name: Collect test artifacts
        if: always()
        run: |
          mkdir -p test-results
          find . -type f -regex ".*/target/.*-reports/.*" -exec cp --parents {} test-results \;
          find . -type d -name "jacoco" -exec cp -r --parents {} test-results \;
          find . -type d -name "jacoco-aggregate" -exec cp -r --parents {} test-results \;

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: test-results
          retention-days: 7
